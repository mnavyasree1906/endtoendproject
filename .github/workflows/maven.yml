# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    # Checkout code
    steps:
    - uses: actions/checkout@v4
    
    # Set up JDK
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven
        
    # Build with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Generate Surefire HTML Report
    - name: Generate Surefire HTML Report
      run: mvn surefire-report:report

    # Install Allure Commandline
    - name: Install Allure Commandline
      run: |
        sudo apt-get update
        sudo apt-get install allure
        
    # Generate Allure Report
    - name: Generate Allure Report
      run: mvn allure:serve &  # Optional: If you want to serve locally. You can remove '&' for serving it as a background process

     # Optional: List contents of the target directory for debugging
    - name: List target directory for Allure Results
      run: ls -la target/

    # Upload Surefire HTML Reports as an artifact
    - name: Upload Surefire HTML Reports
      if: always()  # Ensures this step runs even if the build/test fails
      uses: actions/upload-artifact@v3
      with:
        name: surefire-html-report
        path: target/site/

    # Upload Allure Results as an artifact
    - name: Upload Allure Results as Artifact
      if: always()  # Ensures this step runs even if the build/test fails
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: target/allure-results/

     # Serve Surefire HTML Reports on GitHub Pages
    - name: Deploy Surefire Report to GitHub Pages
      if: success()  # Only serve the report if the build succeeds
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site/

    # Serve Allure Report on GitHub Pages
    - name: Deploy Allure Report to GitHub Pages
      if: success()  # Only serve the report if the build succeeds
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site/allure-maven-plugin/

    # Update dependency graph (Optional)
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

